apply plugin: 'com.android.application'

repositories {
    mavenCentral()
    google()
}

configurations {
    compile.exclude module: 'support-v4'
}

configurations.all {
    exclude group: 'com.google.firebase', module: 'firebase-core'
    exclude group: 'androidx.recyclerview', module: 'recyclerview'
}

dependencies {
    implementation 'androidx.core:core:1.6.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.sharetarget:sharetarget:1.1.0"

    compileOnly 'org.checkerframework:checker-qual:2.5.2'
    compileOnly 'org.checkerframework:checker-compat-qual:2.5.0'
    implementation 'com.google.firebase:firebase-messaging:22.0.0'
    implementation 'com.google.firebase:firebase-config:21.0.1'
    implementation 'com.google.firebase:firebase-datatransport:18.1.0'
    implementation 'com.google.firebase:firebase-appindexing:20.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'com.google.android.gms:play-services-wearable:17.1.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.gms:play-services-wallet:18.1.3'
    implementation 'com.googlecode.mp4parser:isoparser:1.0.6'
    implementation 'com.stripe:stripe-android:2.0.2'
    implementation files('libs/libgsaverification-client.aar')

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}

android {
    compileSdkVersion 31
    buildToolsVersion '31.0.0'
    ndkVersion "21.4.7075529"

    defaultConfig.applicationId = "org.chatengine.messenger"

    sourceSets.main.jniLibs.srcDirs = ['./jni/']

    externalNativeBuild {
        cmake {
            path 'jni/CMakeLists.txt'
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        disable 'BlockedPrivateApi'
    }

    dexOptions {
        jumboMode = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        coreLibraryDesugaringEnabled true
    }

    signingConfigs {
        def keystorePwd = null
        def alias = null
        def pwd = null
        Properties properties

        if (project.rootProject.file('local.properties').exists()) {
            properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
        } else {
            def base64 = System.getenv("LOCAL_PROPERTIES")
            if (base64 != null && !base64.isBlank()) {
                properties = new Properties()
                properties.load(new ByteArrayInputStream(Base64.decoder.decode(base64)))
            }
        }

        if (properties != null) {
            keystorePwd = properties.getProperty("KEYSTORE_PASS")
            alias = properties.getProperty("ALIAS_NAME")
            pwd = properties.getProperty("ALIAS_PASS")
        }

        keystorePwd = keystorePwd ?: System.getenv("KEYSTORE_PASS")
        alias = alias ?: System.getenv("ALIAS_NAME")
        pwd = pwd ?: System.getenv("ALIAS_PASS")

        release {

            storeFile project.file('release.keystore')
            storePassword keystorePwd
            keyAlias alias
            keyPassword pwd
        }

    }

    splits {

        abi {

            enable true

            reset()
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"

            universalApk true

        }

    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            signingConfig signingConfigs.debug
            //applicationIdSuffix ".beta"
            minifyEnabled true
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk.debugSymbolLevel = 'FULL'
        }

        standalone {
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.release
            applicationIdSuffix ".web"
            minifyEnabled true
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk.debugSymbolLevel = 'FULL'
        }

        release {
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk.debugSymbolLevel = 'FULL'
        }
    }

    sourceSets.debug {
        manifest.srcFile 'config/debug/AndroidManifest_SDK23.xml'
    }

    sourceSets.release {
        manifest.srcFile 'config/release/AndroidManifest_SDK23.xml'
    }

    flavorDimensions "minApi"

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = outputFileName.replace("TMessagesProj", "NebulaChat")
        }
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionName "8.3.1"
        versionCode = 9

        vectorDrawables.generatedDensities = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi']

        externalNativeBuild {
            cmake {
                version '3.10.2'
                arguments '-DANDROID_STL=c++_static', '-DANDROID_PLATFORM=android-16', "-j=16"
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'
